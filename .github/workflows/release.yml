name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  ci:
    name: Build release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Touch env file
      run: touch .env
    - run: sudo apt-get install -y libsqlite3-dev libssl-dev
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: davidB/rust-cargo-make@v1
    - name: Build Webclient
      uses: actions-rs/cargo@v1
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
      with:
        command: make
        args: build-release
    - name: Build server
      uses: actions-rs/cargo@v1
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
      with:
        command: build
        args: --release --bin server
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/server
        asset_name: server
        asset_content_type: application/octet-stream